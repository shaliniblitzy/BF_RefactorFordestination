# Testing Dependencies for Python HTTP Server Project
# Comprehensive testing strategy supporting both native Python and Flask implementations
# Version: 1.0.0
# Python: 3.8+

# ==============================================================================
# CORE TESTING FRAMEWORK
# ==============================================================================

# Primary test runner with zero-configuration setup and extensive assertion capabilities
pytest>=7.4.0,<8.0.0

# HTTP client library for integration and end-to-end testing
# Used for testing both native Python http.server and Flask implementations
requests>=2.31.0,<3.0.0

# ==============================================================================
# COVERAGE ANALYSIS
# ==============================================================================

# Code coverage measurement and reporting
# Supports statement, branch, function, and line coverage analysis
coverage>=7.3.0,<8.0.0

# pytest plugin for coverage integration
# Enables pytest --cov command line options
pytest-cov>=4.1.0,<5.0.0

# ==============================================================================
# PARALLEL EXECUTION & PERFORMANCE
# ==============================================================================

# Parallel test execution plugin for pytest
# Enables distributed testing across multiple CPU cores
pytest-xdist>=3.3.1,<4.0.0

# Performance testing and benchmarking
# Required for validating <100ms response time requirements
pytest-benchmark>=4.0.0,<5.0.0

# ==============================================================================
# RELIABILITY & FLAKY TEST MANAGEMENT
# ==============================================================================

# Automatic test retry for flaky network-dependent tests
# Configured for up to 3 retry attempts with 1 second delay
pytest-rerunfailures>=12.0,<13.0

# Flaky test detection and statistical analysis
# Identifies tests with inconsistent success rates
pytest-flaky>=3.7.0,<4.0.0

# ==============================================================================
# MOCKING & TEST FIXTURES
# ==============================================================================

# Enhanced mocking capabilities for pytest
# Simplifies unittest.mock integration with pytest fixtures
pytest-mock>=3.11.1,<4.0.0

# Flexible test fixtures and dependency injection
# Used for creating test servers and HTTP clients
pytest-dependency>=0.5.1,<1.0.0

# ==============================================================================
# REPORTING & ANALYSIS
# ==============================================================================

# HTML test report generation
# Creates detailed test execution reports with pass/fail analysis
pytest-html>=3.2.0,<4.0.0

# JUnit XML format reporting for CI/CD integration
# Built into pytest core, no additional package needed

# Memory usage profiling for performance testing
# Validates <50MB memory usage requirement
memory-profiler>=0.60.0,<1.0.0

# Process monitoring for startup time validation
# Required for validating <5 second startup time requirement
psutil>=5.9.5,<6.0.0

# ==============================================================================
# DEVELOPMENT & DEBUGGING
# ==============================================================================

# Advanced debugging capabilities for test failures
# Provides detailed debugging interface for failed tests
pytest-pdb>=0.2.0,<1.0.0

# Test execution timing and duration analysis
# Identifies slow tests and performance bottlenecks
pytest-timeout>=2.1.0,<3.0.0

# Temporary file and directory management for testing
# Built into pytest core via tmp_path fixture

# ==============================================================================
# CODE QUALITY & SECURITY
# ==============================================================================

# Security vulnerability scanning for test dependencies
# Proactive security analysis of testing environment
safety>=2.3.5,<3.0.0

# Code formatting validation in testing environment
# Ensures consistent code style in test files
black>=23.7.0,<24.0.0

# Linting and style checking for test code
# Validates PEP 8 compliance in test implementations
flake8>=6.0.0,<7.0.0

# ==============================================================================
# FLASK-SPECIFIC TESTING (for Flask implementation testing)
# ==============================================================================

# Flask testing utilities and test client integration
# Provides Flask application testing patterns
pytest-flask>=1.2.0,<2.0.0

# WSGI application testing utilities
# Enables comprehensive Flask application testing
WebTest>=3.0.0,<4.0.0

# ==============================================================================
# PERFORMANCE & LOAD TESTING
# ==============================================================================

# HTTP load testing for concurrent request validation
# Validates 100 simultaneous request handling requirement
locust>=2.16.1,<3.0.0

# Response time measurement and validation
# Precise timing for <100ms response time validation
time-machine>=2.10.0,<3.0.0

# ==============================================================================
# CONFIGURATION & ENVIRONMENT
# ==============================================================================

# Environment variable management for testing
# Enables .env file support in test environments
python-dotenv>=1.0.0,<2.0.0

# Configuration management for test environments
# Supports test-specific configuration overrides
pytest-env>=0.8.2,<1.0.0

# ==============================================================================
# CROSS-PLATFORM COMPATIBILITY
# ==============================================================================

# Windows-specific testing utilities (conditional)
# Only installed on Windows platforms
pywin32>=306; sys_platform == "win32"

# Unix-specific testing utilities (conditional)  
# Only installed on Unix-like platforms
pexpect>=4.8.0; sys_platform != "win32"

# ==============================================================================
# TESTING DOCUMENTATION
# ==============================================================================

# Documentation generation for test cases
# Creates comprehensive test documentation
sphinx>=7.1.0,<8.0.0

# Test coverage documentation integration
# Generates coverage reports in documentation format
sphinx-coverage>=0.1.0,<1.0.0

# ==============================================================================
# EDUCATIONAL FEATURES
# ==============================================================================

# Test discovery and organization
# Enhanced test collection for educational examples
pytest-testmon>=2.0.0,<3.0.0

# Test parameterization and data-driven testing
# Supports comprehensive test scenarios
pytest-datadir>=1.4.1,<2.0.0

# Custom test markers for educational organization
# Built into pytest core, no additional package needed

# ==============================================================================
# VERSION CONSTRAINTS SUMMARY
# ==============================================================================
# All versions are pinned to ensure reproducible test environments
# Compatible with Python 3.8+ runtime requirement
# Supports both Windows, macOS, and Linux platforms
# Optimized for educational use case with comprehensive coverage
# 
# Installation Command:
# pip install -r test_requirements.txt
#
# Usage Examples:
# pytest                                    # Run all tests
# pytest --cov=src --cov-report=html      # Run with coverage
# pytest -n 4                             # Run with 4 parallel workers
# pytest --benchmark-only                 # Run performance tests only
# pytest --flaky                          # Run flaky test analysis
# pytest tests/unit/                      # Run unit tests only
# pytest tests/integration/               # Run integration tests only
# pytest tests/e2e/                       # Run end-to-end tests only